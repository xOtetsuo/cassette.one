{"version":3,"file":"middleware.js","sourceRoot":"","sources":["../../src/middleware.ts"],"names":[],"mappings":"","sourcesContent":["import { Event } from './event';\n\n/**\n * Unstructured object to let users pass extra data to middleware\n */\nexport interface MiddlewareExtra {\n  [name: string]: any;\n}\n\n/**\n * Data to be processed by middleware\n */\nexport interface MiddlewarePayload {\n  event: Event;\n  extra?: MiddlewareExtra;\n}\n\n/**\n * Function called at the end of each Middleware to run the next middleware in the chain\n */\nexport type MiddlewareNext = (payload: MiddlewarePayload) => void;\n\n/**\n * A function to run on the Event stream (each logEvent call)\n *\n * @param payload The event and extra data being sent\n * @param next Function to run the next middleware in the chain, not calling next will end the middleware chain\n */\nexport type Middleware = (payload: MiddlewarePayload, next: MiddlewareNext) => void;\n"]}